
# Spring boot uygulama ad?n? gösterir.
# Da??t?k sistemlerde mikroservislerinin birbirini tan?mas? ve haberle?mesi için önemlidir.
# Spring Cloud, microservices, Spring boot Actuator gibi durumlarda önemlidir.
spring.application.name=config_server

# Spring Boot uygulamam?z?n 8888 portu üzerinde çal???r.
# Spring Cloud Server 8888 portu üzerinden çal???yor. Bu port üzerinden Config Server'a istekler(requests) gönderilir.
server.port=8888

# Spring Cloud Config Server'?n konfigürasyon doslar?n?n alaca?? Git depo adresidir.
# Bu URI: Config Server'?n konfigürasyonlar?n? çekmek için ba?lanaca?? Git deposunu tan?mlar.
# Dikkat: E?er bu URL private ise Personel Access Token eklememiz gerekiyor.
#spring.cloud.config.server.git.uri = https://github.com/username/repo-name
spring.cloud.config.server.git.uri = https://github.com/hamitmizrak/offline_microservis_2_config_server

# Config server'?n git dal?n? konfigürasyonun çeke?i branch'tir. Default: main
# Not: e?er Branch ad?n?z developer, master, production vs durumlarda main ile de?i?tiririz.
spring.cloud.config.server.git.default-label= main

# Config Server'?n Git depos?ndaki konfigürasyon dosyalar?n?n arayaca?? dizindir.
# config-repo: Config server ayarlar?n?n oldu?u yerdir. Data
spring.cloud.config.server.git.search-paths= config-repo
